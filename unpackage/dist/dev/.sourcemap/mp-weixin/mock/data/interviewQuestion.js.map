{"version":3,"file":"interviewQuestion.js","sources":["mock/data/interviewQuestion.js"],"sourcesContent":["export const interviewQuestions = {\n  1: [ // 前端开发(15题)\n    { id: 101, content: \"请解释CSS盒模型的概念\" },\n    { id: 102, content: \"React和Vue的主要区别是什么？\" },\n    { id: 103, content: \"如何优化前端性能？\" },\n    { id: 104, content: \"什么是虚拟DOM？它的优势是什么？\" },\n    { id: 105, content: \"解释JavaScript的事件循环机制\" },\n    { id: 106, content: \"CSS选择器的优先级如何计算？\" },\n    { id: 107, content: \"什么是跨域问题？如何解决？\" },\n    { id: 108, content: \"解释HTTP/HTTPS的主要区别\" },\n    { id: 109, content: \"什么是Webpack的tree shaking？\" },\n    { id: 110, content: \"如何实现前端路由？\" },\n    { id: 111, content: \"解释Flex布局的工作原理\" },\n    { id: 112, content: \"什么是SSR？它的优缺点是什么？\" },\n    { id: 113, content: \"如何实现组件间的通信？\" },\n    { id: 114, content: \"解释TypeScript中的泛型\" },\n    { id: 115, content: \"什么是XSS攻击？如何防范？\" }\n  ],\n  2: [ // 后端开发(15题)\n    { id: 201, content: \"解释RESTful API的设计原则\" },\n    { id: 202, content: \"数据库事务的ACID特性是什么？\" },\n    { id: 203, content: \"什么是数据库索引？它的优缺点是什么？\" },\n    { id: 204, content: \"解释微服务架构的特点\" },\n    { id: 205, content: \"如何设计高并发系统？\" },\n    { id: 206, content: \"什么是消息队列？使用场景是什么？\" },\n    { id: 207, content: \"解释OAuth2.0的工作原理\" },\n    { id: 208, content: \"什么是分布式锁？如何实现？\" },\n    { id: 209, content: \"解释CAP理论\" },\n    { id: 210, content: \"如何优化SQL查询性能？\" },\n    { id: 211, content: \"什么是DDD？它的核心思想是什么？\" },\n    { id: 212, content: \"解释Redis的持久化机制\" },\n    { id: 213, content: \"如何保证API接口的安全性？\" },\n    { id: 214, content: \"什么是服务熔断和服务降级？\" },\n    { id: 215, content: \"解释JWT的组成和工作原理\" }\n  ],\n  3: [ // 算法工程师(15题)\n    { id: 301, content: \"解释时间复杂度和空间复杂度\" },\n    { id: 302, content: \"什么是动态规划？举一个例子\" },\n    { id: 303, content: \"如何判断链表是否有环？\" },\n    { id: 304, content: \"解释快速排序的原理\" },\n    { id: 305, content: \"什么是贪心算法？适用场景是什么？\" },\n    { id: 306, content: \"如何实现LRU缓存？\" },\n    { id: 307, content: \"解释二叉树的遍历方式\" },\n    { id: 308, content: \"什么是哈希冲突？如何解决？\" },\n    { id: 309, content: \"解释Dijkstra算法的原理\" },\n    { id: 310, content: \"什么是红黑树？它的特性是什么？\" },\n    { id: 311, content: \"如何判断两个字符串是否为异位词？\" },\n    { id: 312, content: \"解释KMP算法的原理\" },\n    { id: 313, content: \"什么是拓扑排序？应用场景是什么？\" },\n    { id: 314, content: \"如何求二叉树的最大深度？\" },\n    { id: 315, content: \"解释布隆过滤器的原理\" }\n  ],\n  4: [ // 产品经理(15题)\n    { id: 401, content: \"如何进行需求优先级排序？\" },\n    { id: 402, content: \"什么是MVP？它的作用是什么？\" },\n    { id: 403, content: \"如何设计用户画像？\" },\n    { id: 404, content: \"解释AARRR模型\" },\n    { id: 405, content: \"如何进行竞品分析？\" },\n    { id: 406, content: \"什么是用户故事地图？\" },\n    { id: 407, content: \"如何评估产品功能的成功率？\" },\n    { id: 408, content: \"解释PDCA循环\" },\n    { id: 409, content: \"如何进行有效的用户访谈？\" },\n    { id: 410, content: \"什么是漏斗分析？\" },\n    { id: 411, content: \"如何设计产品埋点？\" },\n    { id: 412, content: \"解释KANO模型\" },\n    { id: 413, content: \"如何制定产品路线图？\" },\n    { id: 414, content: \"什么是用户体验地图？\" },\n    { id: 415, content: \"如何进行需求验证？\" }\n  ],\n  5: [ // 测试工程师(15题)\n    { id: 501, content: \"黑盒测试和白盒测试的区别？\" },\n    { id: 502, content: \"如何设计一个登录功能的测试用例？\" },\n    { id: 503, content: \"什么是边界值分析法？\" },\n    { id: 504, content: \"解释自动化测试金字塔\" },\n    { id: 505, content: \"如何进行性能测试？\" },\n    { id: 506, content: \"什么是冒烟测试？\" },\n    { id: 507, content: \"如何测试API接口？\" },\n    { id: 508, content: \"解释测试驱动开发(TDD)\" },\n    { id: 509, content: \"什么是持续集成中的测试策略？\" },\n    { id: 510, content: \"如何定位偶现的BUG？\" },\n    { id: 511, content: \"什么是猴子测试？\" },\n    { id: 512, content: \"如何设计压力测试场景？\" },\n    { id: 513, content: \"解释Selenium的工作原理\" },\n    { id: 514, content: \"如何进行安全测试？\" },\n    { id: 515, content: \"什么是混沌工程？\" }\n  ],\n  6: [ // 运维工程师(15题)\n    { id: 601, content: \"如何排查服务器CPU占用过高问题？\" },\n    { id: 602, content: \"简述Docker的核心概念\" },\n    { id: 603, content: \"什么是CI/CD？如何实现？\" },\n    { id: 604, content: \"解释Kubernetes的基本架构\" },\n    { id: 605, content: \"如何进行日志分析？\" },\n    { id: 606, content: \"什么是Infrastructure as Code？\" },\n    { id: 607, content: \"如何设计高可用架构？\" },\n    { id: 608, content: \"解释蓝绿部署和金丝雀发布的区别\" },\n    { id: 609, content: \"如何进行容量规划？\" },\n    { id: 610, content: \"什么是Prometheus监控体系？\" },\n    { id: 611, content: \"如何优化数据库性能？\" },\n    { id: 612, content: \"解释TCP/IP协议栈\" },\n    { id: 613, content: \"如何进行安全加固？\" },\n    { id: 614, content: \"什么是SRE？\" },\n    { id: 615, content: \"如何设计灾备方案？\" }\n  ],\n  7: [ // UI设计师(15题)\n    { id: 701, content: \"如何建立设计规范？\" },\n    { id: 702, content: \"解释色彩心理学在UI设计中的应用\" },\n    { id: 703, content: \"如何进行设计评审？\" },\n    { id: 704, content: \"什么是设计系统？\" },\n    { id: 705, content: \"如何平衡美观性和可用性？\" },\n    { id: 706, content: \"解释F型阅读模式\" },\n    { id: 707, content: \"如何进行用户测试？\" },\n    { id: 708, content: \"什么是无障碍设计？\" },\n    { id: 709, content: \"如何设计有效的空状态？\" },\n    { id: 710, content: \"解释格式塔原理\" },\n    { id: 711, content: \"如何进行设计交接？\" },\n    { id: 712, content: \"什么是微交互？\" },\n    { id: 713, content: \"如何建立设计资产库？\" },\n    { id: 714, content: \"解释响应式设计原理\" },\n    { id: 715, content: \"如何衡量设计效果？\" }\n  ],\n  8: [ // 大数据开发(15题)\n    { id: 801, content: \"解释MapReduce的工作原理\" },\n    { id: 802, content: \"什么是数据仓库？\" },\n    { id: 803, content: \"如何优化Hive查询性能？\" },\n    { id: 804, content: \"解释Spark的RDD概念\" },\n    { id: 805, content: \"什么是流批一体？\" },\n    { id: 806, content: \"如何进行数据质量监控？\" },\n    { id: 807, content: \"解释Lambda架构\" },\n    { id: 808, content: \"什么是数据湖？\" },\n    { id: 809, content: \"如何设计数据分层？\" },\n    { id: 810, content: \"解释Flink的检查点机制\" },\n    { id: 811, content: \"什么是数据倾斜？如何解决？\" },\n    { id: 812, content: \"如何进行实时数据处理？\" },\n    { id: 813, content: \"解释OLAP和OLTP的区别\" },\n    { id: 814, content: \"什么是数据血缘？\" },\n    { id: 815, content: \"如何设计大数据平台架构？\" }\n  ],\n  9: [ // 网络安全(15题)\n    { id: 901, content: \"什么是OWASP TOP 10？\" },\n    { id: 902, content: \"如何进行渗透测试？\" },\n    { id: 903, content: \"解释对称加密和非对称加密的区别\" },\n    { id: 904, content: \"什么是零信任架构？\" },\n    { id: 905, content: \"如何防范SQL注入？\" },\n    { id: 906, content: \"解释CSRF攻击原理\" },\n    { id: 907, content: \"什么是SOC？\" },\n    { id: 908, content: \"如何进行安全审计？\" },\n    { id: 909, content: \"解释PKI体系\" },\n    { id: 910, content: \"什么是蜜罐技术？\" },\n    { id: 911, content: \"如何设计安全编码规范？\" },\n    { id: 912, content: \"解释防火墙的工作原理\" },\n    { id: 913, content: \"什么是SDL？\" },\n    { id: 914, content: \"如何进行应急响应？\" },\n    { id: 915, content: \"解释VPN的实现原理\" }\n  ],\n  10: [ // 游戏开发(15题)\n    { id: 1001, content: \"解释游戏循环的概念\" },\n    { id: 1002, content: \"什么是ECS架构？\" },\n    { id: 1003, content: \"如何进行碰撞检测？\" },\n    { id: 1004, content: \"解释A*寻路算法\" },\n    { id: 1005, content: \"什么是游戏状态机？\" },\n    { id: 1006, content: \"如何优化游戏性能？\" },\n    { id: 1007, content: \"解释四元数在游戏中的应用\" },\n    { id: 1008, content: \"什么是游戏AI的行为树？\" },\n    { id: 1009, content: \"如何进行网络同步？\" },\n    { id: 1010, content: \"解释PBR渲染原理\" },\n    { id: 1011, content: \"什么是游戏物理引擎？\" },\n    { id: 1012, content: \"如何设计游戏存档系统？\" },\n    { id: 1013, content: \"解释游戏中的LOD技术\" },\n    { id: 1014, content: \"什么是游戏中的GC问题？\" },\n    { id: 1015, content: \"如何进行游戏打包优化？\" }\n  ],\n  11: [ // 嵌入式开发(15题)\n    { id: 1101, content: \"解释RTOS的特点\" },\n    { id: 1102, content: \"什么是看门狗定时器？\" },\n    { id: 1103, content: \"如何进行内存管理？\" },\n    { id: 1104, content: \"解释DMA的工作原理\" },\n    { id: 1105, content: \"什么是中断嵌套？\" },\n    { id: 1106, content: \"如何优化嵌入式代码？\" },\n    { id: 1107, content: \"解释SPI和I2C的区别\" },\n    { id: 1108, content: \"什么是裸机编程？\" },\n    { id: 1109, content: \"如何进行功耗优化？\" },\n    { id: 1110, content: \"解释CAN总线协议\" },\n    { id: 1111, content: \"什么是嵌入式Linux？\" },\n    { id: 1112, content: \"如何进行固件升级？\" },\n    { id: 1113, content: \"解释PWM的原理\" },\n    { id: 1114, content: \"什么是RT-Thread？\" },\n    { id: 1115, content: \"如何进行硬件调试？\" }\n  ],\n  12: [ // 人工智能(15题)\n    { id: 1201, content: \"解释过拟合和欠拟合的概念\" },\n    { id: 1202, content: \"CNN和RNN的主要区别是什么？\" },\n    { id: 1203, content: \"什么是注意力机制？\" },\n    { id: 1204, content: \"解释梯度消失问题\" },\n    { id: 1205, content: \"如何进行模型评估？\" },\n    { id: 1206, content: \"什么是迁移学习？\" },\n    { id: 1207, content: \"解释Transformer架构\" },\n    { id: 1208, content: \"什么是生成对抗网络？\" },\n    { id: 1209, content: \"如何进行数据增强？\" },\n    { id: 1210, content: \"解释强化学习的核心概念\" },\n    { id: 1211, content: \"什么是模型蒸馏？\" },\n    { id: 1212, content: \"如何进行超参数调优？\" },\n    { id: 1213, content: \"解释Batch Normalization\" },\n    { id: 1214, content: \"什么是联邦学习？\" },\n    { id: 1215, content: \"如何解决类别不平衡问题？\" }\n  ]\n}"],"names":[],"mappings":"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"}