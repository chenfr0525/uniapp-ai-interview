{"version":3,"file":"mockApi.js","sources":["mock/services/mockApi.js"],"sourcesContent":["import {\r\n\tinterviewCategories,\r\n\tinterviewQuestions,\r\n\tuserRecords,\r\n\tuserStats\r\n} from '@/mock/index.js'\r\n\r\n// 模拟网络请求延迟\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nexport const mockApi = {\r\n\t// 获取面试分类\r\n\tasync getCategories() {\r\n\t\treturn interviewCategories\r\n\t},\r\n\t//模糊搜索分类\r\n\tasync searchCategories(keyword) {\r\n\t\tif (!keyword || typeof keyword !== 'string') {\r\n\t\t\treturn interviewCategories; // 无关键词返回所有分类\r\n\t\t}\r\n\r\n\t\tconst lowerKeyword = keyword.toLowerCase();\r\n\r\n\t\treturn interviewCategories.filter(category =>\r\n\t\t\tcategory.name.toLowerCase().includes(lowerKeyword)\r\n\t\t);\r\n\t},\r\n\r\n\t//获取推荐的面试分类\r\n\tasync getRecommendedCategories() {\r\n\t\treturn interviewCategories.filter(item => item.recommended)\r\n\t},\r\n\r\n\t//难度筛选\r\n\tasync getCategoriesByDifficulty(level) {\r\n\t\treturn interviewCategories.filter(item => item.difficulty === level)\r\n\t},\r\n\r\n\t// 根据分类ID获取问题\r\n\tasync getQuestions(userId, categoryId) {\r\n\t\tconst allQuestions = interviewQuestions[categoryId] || [];\r\n\t\tconst userRecord = userRecords.find(user => user.id === userId)\r\n\t\tconst answeredQuestionIds = userRecord?.records.map(item => item.questionId) || []\r\n\t\t// 3. 分类问题\r\n\t\tconst completed = allQuestions.filter(q => answeredQuestionIds.includes(q.id));\r\n\t\tconst remaining = allQuestions.filter(q => !answeredQuestionIds.includes(q.id));\r\n\t\treturn {\r\n\t\t\tcategoryId,\r\n\t\t\tcategoryName: completed[0]?.categoryName || allQuestions[0]?.categoryName || '',\r\n\t\t\tcompleted,\r\n\t\t\tremaining\r\n\t\t};\r\n\t},\r\n\t//根据id获取问题\r\n\tasync getQuestionById(questionId) {\r\n\t\t// 遍历所有分类\r\n\t\tfor (const index in interviewQuestions) {\r\n\t\t\tconst foundQuestion = interviewQuestions[index].find(\r\n\t\t\t\tquestion => question.id === +questionId)\r\n\t\t\t// 如果找到则返回\r\n\t\t\tif (foundQuestion) {\r\n\t\t\t\treturn foundQuestion\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 未找到返回null\r\n\t\treturn null;\r\n\t},\r\n\r\n\t// 获取用户记录\r\n\tasync getRecords() {\r\n\t\tconst data = userRecords[0].records.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\tid: item.id,\r\n\t\t\t\tcategory: item.categoryName,\r\n\t\t\t\ttime: item.interviewTime,\r\n\t\t\t\tquestion: item.questionContent,\r\n\t\t\t\tquestionId: item.questionId,\r\n\t\t\t\tscore: item.scores.total\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn {\r\n\t\t\tdata\r\n\t\t}\r\n\t},\r\n\t//根据id获取面试结果\r\n\tasync getRecordById(id) {\r\n\t\tconst data = userRecords[0].records.find(item => item.id === +id)\r\n\t\treturn data\r\n\t}\r\n}"],"names":["interviewCategories","interviewQuestions","userRecords"],"mappings":";;;;AAUY,MAAC,UAAU;AAAA;AAAA,EAEtB,MAAM,gBAAgB;AACrB,WAAOA,8BAAmB;AAAA,EAC1B;AAAA;AAAA,EAED,MAAM,iBAAiB,SAAS;AAC/B,QAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC5C,aAAOA;IACP;AAED,UAAM,eAAe,QAAQ;AAE7B,WAAOA,8BAAAA,oBAAoB;AAAA,MAAO,cACjC,SAAS,KAAK,cAAc,SAAS,YAAY;AAAA,IACpD;AAAA,EACE;AAAA;AAAA,EAGD,MAAM,2BAA2B;AAChC,WAAOA,8BAAmB,oBAAC,OAAO,UAAQ,KAAK,WAAW;AAAA,EAC1D;AAAA;AAAA,EAGD,MAAM,0BAA0B,OAAO;AACtC,WAAOA,8BAAAA,oBAAoB,OAAO,UAAQ,KAAK,eAAe,KAAK;AAAA,EACnE;AAAA;AAAA,EAGD,MAAM,aAAa,QAAQ,YAAY;;AACtC,UAAM,eAAeC,4BAAAA,mBAAmB,UAAU,KAAK,CAAA;AACvD,UAAM,aAAaC,sBAAAA,YAAY,KAAK,UAAQ,KAAK,OAAO,MAAM;AAC9D,UAAM,uBAAsB,yCAAY,QAAQ,IAAI,UAAQ,KAAK,gBAAe,CAAE;AAElF,UAAM,YAAY,aAAa,OAAO,OAAK,oBAAoB,SAAS,EAAE,EAAE,CAAC;AAC7E,UAAM,YAAY,aAAa,OAAO,OAAK,CAAC,oBAAoB,SAAS,EAAE,EAAE,CAAC;AAC9E,WAAO;AAAA,MACN;AAAA,MACA,gBAAc,eAAU,CAAC,MAAX,mBAAc,mBAAgB,kBAAa,CAAC,MAAd,mBAAiB,iBAAgB;AAAA,MAC7E;AAAA,MACA;AAAA,IACH;AAAA,EACE;AAAA;AAAA,EAED,MAAM,gBAAgB,YAAY;AAEjC,eAAW,SAASD,gDAAoB;AACvC,YAAM,gBAAgBA,4BAAAA,mBAAmB,KAAK,EAAE;AAAA,QAC/C,cAAY,SAAS,OAAO,CAAC;AAAA,MAAU;AAExC,UAAI,eAAe;AAClB,eAAO;AAAA,MACP;AAAA,IACD;AAGD,WAAO;AAAA,EACP;AAAA;AAAA,EAGD,MAAM,aAAa;AAClB,UAAM,OAAOC,sBAAAA,YAAY,CAAC,EAAE,QAAQ,IAAI,UAAQ;AAC/C,aAAO;AAAA,QACN,IAAI,KAAK;AAAA,QACT,UAAU,KAAK;AAAA,QACf,MAAM,KAAK;AAAA,QACX,UAAU,KAAK;AAAA,QACf,YAAY,KAAK;AAAA,QACjB,OAAO,KAAK,OAAO;AAAA,MACnB;AAAA,IACJ,CAAG;AACD,WAAO;AAAA,MACN;AAAA,IACA;AAAA,EACD;AAAA;AAAA,EAED,MAAM,cAAc,IAAI;AACvB,UAAM,OAAOA,sBAAAA,YAAY,CAAC,EAAE,QAAQ,KAAK,UAAQ,KAAK,OAAO,CAAC,EAAE;AAChE,WAAO;AAAA,EACP;AACF;;"}